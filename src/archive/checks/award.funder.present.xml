<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
    <id>award.funder.present.1</id>
    <name>Award Funder Present</name>
    <description>Check that an award funder exists.</description>
    <type>Findable</type>
    <level>OPTIONAL</level>
    <environment>python</environment>
    <code><![CDATA[
def call():
  # check: does an awardFunder exist?
  import re
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # These global variables are read by the quality engine when
  # the check returns
  global output
  global status
  
  dataFilename = "DataONEformats.csv"

  # Item is not present
  if 'awardFunder' not in globals() or awardFunder is None:
    output = "An award funder was not found."
    status = "FAILURE"
    return False
    
  if(mvar.isBlank(awardFunder)):
    output = "The award funder is blank."
    status = "FAILURE"
    return False
    
    
  # Now check if the value found for funder is know in the CrossRef
  # Funder Registry https://www.crossref.org/services/funder-registry/
  
  formatsFile = ""
  # The CrossRef Funder Registry file is passed via the 'mdq_params' hash
  if('mdq_params' not in globals()):
    output = "Internal error running check, mdq_params not available to check."
    status = "ERROR"
    return False
  else:
    funderFile = mdq_params['CrossRefFunderRegistryFile']
    formatsFile = "{}/{}".format(mdq_params['metadigDataDir'], dataFilename)
  
  # Create list of the CrossRef Funder Registry
  funders = []
  with open(funderFile, 'rb') as csvfile:
      fmtreader = csv.reader(csvfile, delimiter=',', quotechar='"')
      for row in fmtreader:
        funders.append(row)

  funderFound = False
  for funder in funders:
    funderEsc = re.escape(funder)
    if(re.search(funder, awardFunder)):
      funderStr = True
      status = "SUCCESS"
      break
     
  if(funderFound):
    output = "The funder {} was found.".format(funderStr)
    status = "SUCCESS"
    return True
  else:
    output = "The funder is non-blank but was not found in the CrossRef Funder Reistry"
    status = "FAILURE"
    return False
      ]]></code>
    <selector>
        <name>awardFunder</name>
        <!-- ISO 19115 RolCodes from https://geo-ide.noaa.gov/wiki/index.php?title=ISO_19115_and_19115-2_CodeList_Dictionaries -->
        <xpath>/eml/dataset/project/funding//text()[normalize-space()] |
               /eml/dataset/project/award/funderName |
               /resource/fundingReferences/fundingReference/awardNumber//text()[normalize-space()] |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='sponsor']/organisationName |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='sponsor']/party/CI_Organisation/name |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='sponsor']/party/CI_Organisation/individual/CI_Individual/name
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_ResponsibleParty[normalize-space(role/CI_RoleCode)='funder']/organisationName |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='funder']/party/CI_Organisation/name |
               /*/identificationInfo/*/citation/CI_Citation/citedResponsibleParty/CI_Responsibility[normalize-space(role/CI_RoleCode)='funder']/party/CI_Organisation/individual/CI_Individual/name
        </xpath>
    </selector>
    <dialect>
        <name>DataCite 3.1</name>
        <xpath>boolean(/*[local-name() = 'resource'])</xpath>
    </dialect>
    <dialect>
        <name>Dryad Data Package and Data File Modules</name>
        <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
    </dialect>
    <dialect>
        <name>Ecological Metadata Language</name>
        <xpath>boolean(/*[local-name() = 'eml'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
        <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
    </dialect>
    <dialect>
        <name>ISO 19115-1 / ISO 19115-3</name>
        <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
    </dialect>
</mdq:check>

