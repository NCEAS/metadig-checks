<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
	<id>check.creator.has.orcid.1</id>
	<name>Creator has ORCID</name>
	<description>The creator field should contain an ORCID, email and address.</description>
	<type>identification</type>  
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  # These variables are defined by the MQE from the <xpath> selectors.
  # "creatorPresent" - the dataset creator
  # "userId"         - the dataset creator/userId
  # "emailPresent"   - the creator email
  # "addressPresent" - the creator address
  if(!creatorPresent) {
    return(list(status="SKIP", output="A creator entry is not present, unable to check for an ORCID, email or address."))
  }
  
  # Assume that the check will succeed, until proven otherwise.
  # The output messages will be gathered into a list
  status <- "SUCCESS"
  values <- list()
  
  # There could be multiple creators, but just one creator with a 'userId' will satisfy this check
  if(is.null(userId)) {
    # Should this be a SKIP?
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="A user identifier for any creator is not present, so a check for an ORCID cannot be made")
  } else {
    # creator/userId is present, so check if it is an orcid
    hasORCID <- grepl("^\\s*http(s)?://orcid\\.org.+", userId, perl=T) || grepl("^\\s*ORCID:.+", userId, perl=T)
    if(hasORCID) {
      values[[length(values)+1]] <- list(value="The user identifier for a creator is an ORCID")
    } else {
      status <- "FAILURE"
      values[[length(values)+1]] <- list(value="The user identifier for any creator does not contains an ORCID")
    }
  }
  
  # There could be multiple creator, but just one creator with an 'email' will satisfy this check
  if(emailPresent) {
    values[[length(values)+1]] <- list(value="An email address for a creator is present")
  } else {
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="An email address for any creator is not present")
  } 
  
  # There could be multiple creator, but just one creator with an 'address' will satisfy this check
  if(addressPresent) {
    values[[length(values)+1]] <- list(value="An address for a creator is present")
  } else {
    status <- "FAILURE"
    values[[length(values)+1]] <- list(value="An address for any creator is not present")
  }
  
  return(list(status=status, values=values))
  
}

result <- check()
mdq_result <- list(status=result$status, output=result$values)
]]></code>
  <selector>
		 <name>creatorPresent</name>
		 <xpath>boolean(/eml/dataset/creator)</xpath>
	 </selector>
  <selector>
		 <name>userId</name>
		 <xpath>/eml/dataset/creator/userId</xpath>
	 </selector>
  <selector>
		 <name>emailPresent</name>
		 <xpath>boolean(/eml/dataset/creator/electronicMailAddress)</xpath>
	 </selector>
  <selector>
		 <name>addressPresent</name>
		 <xpath>boolean(/eml/dataset/creator/address)</xpath>
	 </selector>
	 <dialect>
		 <name>eml</name>
		 <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	 </dialect>
</mdq:check>
