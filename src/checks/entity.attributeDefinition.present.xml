<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>entity.attributeDefinition.present.1</id>
   <name>Entity Attribute Definition Present</name>
   <description>Check that an attribute definition exists.</description>
   <type>Interoperable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  global attributeDefinition
  global attributeName
  
  import metadig.variable as mvar
  
  NoneType = type(None)
  
  # Check if definitions are present for each attribute.
  if not attributeDefinitionPresent:
    output = "No attributes definitions are present."
    status = "FAILURE"
    return False
    
  attributeCount = 0
  missing = []
  maxPrint = 5
  
  # Convert all values to unicode 
  attributeDefinition = mvar.toUnicode(attributeDefinition)
  # If a single value, convert to a list for easier processing (i.e. don't have
  # to keep checking if it's a single value or list)
  if(isinstance(attributeDefinition, unicode)):
    attributeDefinition = [attributeDefinition]
    
  attributeName = mvar.toUnicode(attributeName)
  if(isinstance(attributeName, unicode)):
    attributeName = [attributeName]
  
  for i in range(0, len(attributeDefinition)):
    attributeCount += 1
    definition = attributeDefinition[i]
    name = attributeName[i]
    # Check if the name is missing or blank
    if(isinstance(name, NoneType) or mvar.isBlank(name)):
      name = "attr #{}.format(i)"
      
    # No definition for this attribute was specified, or it is blank
    if(isinstance(definition, NoneType) or mvar.isBlank(definition)): 
      missing.append(name)
        
  if(len(missing) == 1):
    output = u"This {} attribute (of {} total) does not have a definition: {}".format(len(missing), attributeCount, missing[0])
    status = "FAILURE"
    return False
  elif(len(missing) > 1):
    output = u"These {} attributes (of {} total) do not have a definition: {}".format(len(missing), attributeCount, ', '.join(missing[0:maxPrint]))
    if(len(missing) > maxPrint):
      output += u", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes have a definition".format(attributeCount)
    status = "SUCCESS"
    return True
    ]]></code>
   <selector>
      <name>attributeDefinitionPresent</name>
      <xpath>boolean(
          /eml/dataset/*/attributeList/attribute/attributeDefinition or
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute/*/description or
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute/*/description or
          /*/contentInfo/*/dimension/MI_Band/descriptor or
          /*/contentInfo/*/dimension/MD_Band/descriptor)</xpath>
   </selector>
   <selector>
      <name>attributeDefinition</name>
      <xpath>/eml/dataset/*/attributeList/attribute |
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
      <subSelector>
         <name>definition</name>
         <xpath>
             ./attributeDefinition/text()[normalize-space()] |
             ./*/description/*/text()[normalize-space()] |
             ./descriptor/*/text()[normalize-space()]
         </xpath>
     </subSelector>
   </selector>
   <selector>
      <name>attributeName</name>
      <xpath>
          /eml/dataset/*/attributeList/attribute |
          /*/contentInfo/MD_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/MI_CoverageDescription/attributeGroup/*/attribute |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
      <subSelector>
         <name>name</name>
         <xpath>
             ./attributeName/text()[normalize-space()] | 
             ./*/name/code/*/text()[normalize-space()] |
             ./sequenceIdentifier/MemberName/aName/*/text()[normalize-space()]
         </xpath>
     </subSelector>
   </selector>
   <dialect>
      <name>DataCite 3.1</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>
