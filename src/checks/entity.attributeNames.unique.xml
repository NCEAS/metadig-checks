<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>entity.attributeNames.unique.1</id>
   <name>Entity Attribute Names Are Unique</name>
   <description>Check that attribute names are unique.</description>
   <type>Accessible</type>
   <level>REQUIRED</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  global entities
  
  import metadig.variable as mvar
  
  maxPrint = 5
  
  # Determine if elements are repeated in a list
  def duplicates(x):
   
    repeated = []
    nElements = len(x)
      
    # Ensure that the list is unicode
    x = mvar.toUnicode(x)
    for i in range(nElements):
      k = i + 1
      for j in range(k, nElements):
        if x[i] == x[j] and x[i] not in repeated:
          if(x[i].strip() == ""): 
            continue
          repeated.append(x[i])
    return repeated
    
  allDuplicates = []
  entityCount = 0
  attributeCount = 0
  
  # The check fails if no attributes are found.
  if(len(entities) == 0):
    output = "No attributes were found, unable to check for duplicate attribute names."
    status = "FAILURE"
    return False
  
  # Convert all values to unicode
  entities = mvar.toUnicode(entities)
  # If a single string, convert to list for easier processing
  if(isinstance(entities, unicode)):
    entities = [entities]
    
  # For each entity, check that the attributes defined for it have unique names
  for i in range(0, len(entities)):
    entityCount += 1
    attrList = mvar.toUnicode(entities[i])
    # No attributes for this entity
    if(attrList == None):
      continue
    else:
      # If only one attribute, the quality engine will return it as a string. Don't
      # check for dupes (characters) in a single string, only check a list of strings
      if(isinstance(attrList, str) or isinstance(attrList, unicode)):
        attributeCount += 1
        continue
      else:
        attributeCount += len(attrList)
        allDuplicates.extend(duplicates(attrList))
        
  if(len(allDuplicates) > 0):
    output = u"These {} attributes (of {} total) had duplicate names: {}".format(len(allDuplicates), attributeCount, ', '.join(allDuplicates[0:maxPrint]))
    if(len(allDuplicates) > maxPrint):
      output += u", ..."
  else:
    output = "No duplicate attribute names were found."
  status = "SUCCESS"
  return True 
      ]]></code>
   <selector>
      <name>entities</name>
      <xpath>
          /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity] |
          /*/contentInfo/MD_CoverageDescription |
          /*/contentInfo/MI_CoverageDescription 
      </xpath>
      <subSelector>
          <name>names</name>
          <xpath>
              ./attributeList/attribute/attributeName/text()[normalize-space()] |
              ./attributeDescription/RecordType/text()[normalize-space()] |
              ./dimension/MI_Band/sequenceIdentifier/MemberName/aName//text()[normalize-space()] |
              ./dimension/MD_Band/sequenceIdentifier/MemberName/aName//text()[normalize-space()] |
              ./descriptor/*/text()[normalize-space()]
          </xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>DataCite 4</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>
