<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
  <id>entity.attributePrecision.present.1</id>
  <name>Entity Attribute Precision Defined</name>
  <description>Check that attributes have a measurement precision defined.</description>
  <type>Reusable</type>
  <level>REQUIRED</level>
  <environment>python</environment>
  <code><![CDATA[
def call():
  global output
  global status
  
  import metadig.variable as mvar
  
  global attributePrecision
  global attributeName
  
  maxPrint = 5
  
  # Check if a measurement precision is present for each attribute.
  if not attributesPresent:
    output = "No attributes were found so unable to check if attribute measurement precision is defined."
    status = "FAILURE"
    return False
    
  missing = []
  
  attributePrecision = mvar.toUnicode(attributePrecision)
  attributeName = mvar.toUnicode(attributeName)
  
  if(isinstance(attributePrecision, unicode)):
    attributePrecision = [attributePrecision]
    
  if(isinstance(attributeName, unicode)):
    attributeName = [attributeName]
    
  # The metadata has attributes, but just none that require a precision, so give it a pass.
  if(len(attributePrecision) == 0):
    output = "Attributes are present, but none require a measurement precision."
    status = "SUCCESS"
    return True

  for i in range(0, len(attributePrecision)):
    precision = attributePrecision[i]
    name = attributeName[i]
    if(name is None or mvar.isBlank(name)):
      name = "#{}".format(i)
      
    # No precision for this attribute was specified
    if(precision is None or mvar.isBlank(precision)):
      missing.append(name)
      continue
  
  if(len(missing) > 0):
    output = u"These {} attributes (of {} total) are missing a precision value: '{}'".format(len(missing), len(attributePrecision), ', '.join(missing[0:maxPrint]))
    if(len(missing) > maxPrint):
      output += u", ..."
    status = "FAILURE"
    return False
  else:
    output = "All {} attributes that require a measurement precision have one defined".format(len(attributePrecision))
    status = "SUCCESS"
    return True
    ]]></code>
  <selector>
    <name>attributesPresent</name>
    <xpath>boolean(
          /eml/dataset/*/attributeList/attribute or
          /*/contentInfo/*/dimension/MI_Band or
          /*/contentInfo/*/dimension/MD_Band)</xpath>
  </selector>
  <selector>
    <!-- Only select attributes that require a precision, i.e. for EML 
           attribute measurement types include: "interval", "ratio", "dateTime"
      -->
    <name>attributePrecision</name>
    <xpath>
          /eml/dataset/*/attributeList/attribute/measurementScale/interval |
          /eml/dataset/*/attributeList/attribute/measurementScale/ratio |
          /eml/dataset/*/attributeList/attribute/measurementScale/dateTime |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band 
      </xpath>
    <subSelector>
      <name>domain</name>
      <xpath>
             ./precision |
             ./dateTimePrecision | 
             ./bitsPerValue
         </xpath>
    </subSelector>
  </selector>
  <selector>
    <name>attributeName</name>
    <xpath>
          /eml/dataset/*/attributeList/attribute/measurementScale/interval |
          /eml/dataset/*/attributeList/attribute/measurementScale/ratio |
          /eml/dataset/*/attributeList/attribute/measurementScale/dateTime |
          /*/contentInfo/*/dimension/MI_Band |
          /*/contentInfo/*/dimension/MD_Band
      </xpath>
    <subSelector>
      <name>name</name>
      <!-- Multiple paths may be present and return values, but we need just one -->
      <xpath>
             (../../attributeName | 
             ./sequenceIdentifier/MemberName/aName[1]/*/text()[normalize-space()] |
             ./descriptor[1]/*/text()[normalize-space()])[1]
         </xpath>
    </subSelector>
  </selector>
  <dialect>
    <name>DataCite 4</name>
    <xpath>boolean(/*[local-name() = 'resource'])</xpath>
  </dialect>
  <dialect>
    <name>Ecological Metadata Language</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
    <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
    <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</mdq:check>
