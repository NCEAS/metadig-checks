<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
  <id>entity.checksum.present.1</id>
  <name>Entity checksum and algorithm are present.</name>
  <description>Check that an entity checksum and algorithm are present.</description>
  <type>Interoperable</type>
  <level>REQUIRED</level>
  <environment>python</environment>
  <code><![CDATA[
def call():
  global output
  global status
  global checksums
  global checksumAlgorithms
  global entityNames
 
  import metadig.variable as mvar
  maxPrint = 5
 
  # Check if measurement units are present for each attribute.
  if not entitiesPresent:
    output = "No data entities were found so unable to check for entity checksums."
    status = "FAILURE"
    return False
    
  entityCount = 0
  missing = []
 
  checksums = mvar.toUnicode(checksums)
  checksumAlgorithms = mvar.toUnicode(checksumAlgorithms)
 
  # If only a single value is returned (vs type "list"), then convert to a list
  # for easier processing
  if(isinstance(checksums, unicode)):
    checksums = [checksums]
 
  if(isinstance(checksumAlgorithms, unicode)):
    checksumAlgorithms = [checksumAlgorithms]
   
  if(isinstance(entityNames, unicode)):
    entityNames = [entityNames]
 
  for i in range(0, len(checksums)):
    entityCount += 1
    sum = checksums[i]
    algorithm = checksumAlgorithms[i]
    name = entityNames[i]
    if(name is None):
      name = "#{}".format(i)

    # No units for this attribute was specified
    if(sum is None or mvar.isBlank(sum)):
      missing.append(mvar.toUnicode(name))
    elif(algorithm is None or mvar.isBlank(algorithm)):
      missing.append(mvar.toUnicode(name))
     
  if(len(missing) == 1):
    output = u"This 1 entity (of {} total) is missing a checksum value or algorithm: '{}'".format(entityCount, missing[0])
    status = "FAILURE"
    return False
  elif(len(missing) > 1):
    output = u"These {} entities (of {} total) are missing a checksum value or algorithm: '{}'".format(len(missing), entityCount, ', '.join(missing[0:maxPrint]))
    if(len(missing) > maxPrint):
      output += u", ..."
    status = "FAILURE"
    return False
  else:
    output = "All entities have checksums and checksum algorithms specified."
    status = "SUCCESS"
    return True
   ]]></code>
  <selector>
    <name>entitiesPresent</name>
    <xpath>boolean(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])
    </xpath>
  </selector>
  <selector>
     <name>checksums</name>
     <xpath>
        /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]
     </xpath>
     <subSelector>
        <name>...</name>
        <xpath>./physical/authentication</xpath>
    </subSelector>
  </selector>
  <selector>
     <name>checksumAlgorithms</name>
     <xpath>
        /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]
     </xpath>
     <subSelector>
        <name>...</name>
        <xpath>./physical/authentication[@method]</xpath>
    </subSelector>
  </selector>
  <selector>
     <name>entityNames</name>
     <xpath> /eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]
     </xpath>
     <subSelector>
        <name>name</name>
        <xpath>./entityName</xpath>
    </subSelector>
  </selector>
  <dialect>
     <name>Ecological Metadata Language</name>
     <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
  <dialect>
     <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
     <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
  </dialect>
</mdq:check>
