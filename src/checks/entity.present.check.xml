<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
	<id>check.entity.present.1</id>
	<name>Data entity present check.</name>
	<description>Check that a data entity is present.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
check <- function() {
  library(base)
  library(metadig)
  # variables defined by MQE from the <xpath> selectors.
  # "entityPresent" - is a data entity present?
  
  outputList <- list()
  status <- "SUCCESS"
  # Assume that the check will succeed, until proven otherwise.
  # The dataset may have multiple entities, so check each one. 
  if(entityPresent) {
    if (entityCount == 1) {
      outputList[[length(outputList)+1]] <- list(value=sprintf("1 data entity is present."))
    } else {
      outputList[[length(outputList)+1]] <- list(value=sprintf("%d data entities were found.", entityCount))
    }
    return(list(status=status, values=outputList))
  } else {
    outputList[[length(outputList)+1]] <- list(value=sprintf("No data entities were found."))
    return(list(status="FAILURE", values=outputList))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=result$values) 
]]></code>
	<selector>
		<name>entityPresent</name>
		<xpath>boolean(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])</xpath>
	</selector>
	<selector>
		<name>entityCount</name>
		<xpath>count(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])</xpath>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</mdq:check>
