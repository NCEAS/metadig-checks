<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
  <id>resource.awardFunderName.controlled-1.0.0</id>
  <name>Award Funder Name Controlled</name>
  <description>Check that an award funder name exists and is known (controlled)</description>
  <type>Findable</type>
  <level>OPTIONAL</level>
  <environment>python</environment>
  <code><![CDATA[
def call():
  # check: does the necessary awardFunder exist?
  import re
  import java.util.ArrayList as ArrayList
  import metadig.variable as mvar

  # These global variables are read by the quality engine when
  # the check returns
  global output
  global status
  global awardFunders
  
  # Approved funder name, with python regex special characters escaped
  approvedFunder = "U.S. DOE > Office of Science > Biological and Environmental Research (BER)"
  approvedFunderRegex = "U.S. DOE .* Office of Science .* Biological and Environmental Research \(BER\)"

  # No award funders are present
  if 'awardFunders' not in globals() or awardFunders is None:
    output = "An award funder was not found."
    status = "FAILURE"
    return False
    
  if(mvar.isBlank(awardFunders)):
    output = "The award funder is blank."
    status = "FAILURE"
    return False
    
  # Convert all values to unicode
  awardFunders = mvar.toUnicode(awardFunders)
  # If only a single value is returned (type "unicode" vs type "list"), then convert to a list
  # for easier processing
  if(isinstance(awardFunders, str)):
    awardFunders = [awardFunders]
    
  found = False
  for i in range(0, len(awardFunders)):
    thisFunder = re.sub(' +', ' ', awardFunders[i])
    
    # Allow additional characters before and after the approved funder, for example:
    #  U.S. DOE > Office of Science (SC) &gt; Biological and Environmental Research (BER) (SC-23)
    if(re.match(approvedFunderRegex, thisFunder.strip())):
      found = True
      break
      
  if(found):
    output = "The funding organzation \"{}\" was found in the metadata.".format(approvedFunder.replace('\\',''))
    status = "SUCCESS"
    return True
  else:
    output = "The funding organzation \"{}\" was not found in the metadata.".format(approvedFunder.replace('\\',''))
    status = "FAILURE"
    return False
    ]]></code>
  <selector>
    <name>awardFunders</name>
    <xpath>/eml/dataset/associatedParty[role/text()='fundingOrganization']/organizationName/text()[normalize-space()]</xpath>
  </selector>
  <dialect>
    <name>Ecological Metadata Language</name>
    <xpath>boolean(/*[local-name() = 'eml'])</xpath>
  </dialect>
</mdq:check>
