<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>resource.keywordType.present.1</id>
   <name>Resource keyword Type Present</name>
   <description>Check if each keyword has a type specified..</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  global output
  global status
  global keywords
  global keywordNames
  import metadig.variable as mvar

  maxPrint = 10
  keywordTypesMissing = []
  NoneType = type(None)
  
  # For each keyword, check if a type is specified
  if(isinstance(keywords, NoneType) or len(keywords) == 0):
    output = "No keyword types were found."
    status = "FAILURE"
    return False
    
  # Make sure values are converted to type unicode
  keywords = mvar.toUnicode(keywords)
  keywordNames = mvar.toUnicode(keywordNames)
  
  # If only a single value is returned (vs type "list"), then convert to a list
  # for easier processing
  if(isinstance(keywords, unicode)):
    keywords = [keywords]
    
  if(isinstance(keywordNames, unicode)):
    keywordNames = [keywordNames]
  
  # For each keyword, check if a keyword type is specified.
  for i in range(0, len(keywords)):
    keywordType = keywords[i]
    keywordName = keywordNames[i]
    
    # Check if keywordName is blank
    if(isinstance(keywordName, NoneType) or mvar.isBlank(keywordName)):
      keywordName = "name N/A"
          
    # No keyword type for this keyword was specified
    if(isinstance(keywordType, NoneType) or mvar.isBlank(keywordType)):
      keywordTypesMissing.append(keywordName)

  # Add the list of resources that don't have keywords to the output
  if(len(keywordTypesMissing) == 1):
    output = u"This keyword (of {} total) does not have a type specified: '{}'".format(len(keywords), ', '.join(keywordTypesMissing[0:maxPrint]))
  elif (len(keywordTypesMissing) > 1):
    output = u"These {} keywords (of {} total) do not have a type specified: '{}'".format(len(keywordTypesMissing), len(keywords), ', '.join(keywordTypesMissing[0:maxPrint]))
    if(len(keywordTypesMissing) > maxPrint):
      output += ", ..."
      
    status = "FAILURE"
    return False
  else:
    output = "All {} keywords have a type specified".format(len(keywords))
    status = "SUCCESS"
    return True

    ]]></code>
   <selector>
      <name>keywords</name>
      <xpath>
          /eml/dataset/keywordSet/keyword |
          /*/identificationInfo/MD_DataIdentification/descriptiveKeywords/MD_Keywords/keyword
      </xpath>
      <subSelector>
        <name>type</name>
        <xpath>
            ./@keywordType |
            ../type/MD_KeywordTypeCode
        </xpath>
      </subSelector>
    </selector>
    <selector>
      <name>keywordNames</name>
      <xpath>
          /eml/dataset/keywordSet/keyword |
          /*/identificationInfo/MD_DataIdentification/descriptiveKeywords/MD_Keywords/keyword
      </xpath>
      <subSelector>
        <name>name</name>
        <xpath>text()[normalize-space()] | */text()[normalize-space()]</xpath>
      </subSelector>
   </selector>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139, ISO 19139-2, ISO 19115-1, ISO 19115-3 </name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>
