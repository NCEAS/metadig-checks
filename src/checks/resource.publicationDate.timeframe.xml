<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
  <id>resource.publicationDate.timeframe.1</id>
  <name>Publication date is not in the future</name>
  <description>Publication date should not be in the future</description>
  <type>Findable</type>
  <level>OPTIONAL</level>
  <environment>rscript</environment>
  <code><![CDATA[
    library(metadig)
    library(stringr)
    
    if (pubDatePresent) {
      if(is.na(datasetPubDate) || length(datasetPubDate) == 0) {
        failure("The publication date is blank.")
      } else {
        # A publication date is present, so now check if it is in
        # the future
        # The R as.Date function assumes that you are specifying a date as number of
        # days since epoch, if a string is entered that looks like a number, i.e. "2017"
        # so we have to check to see if R got confused.
        datasetPubDate <- str_trim(datasetPubDate, side=c("both"))
        pubDate <- str_trim(toString(datasetPubDate), side = c("both"))
        # If ISO 8806 formatted date, remove the time portion in case this was formatted in a way that
        # R can't handle.
        if (grepl(pubDate, "T")) {
          pubDate <- str_replace(pubDate, "T.*", "")
        }
              
        # First try to parse date string with default date format (should be ISO 8601)
        # Note: the 'as.Date' function is supposed to not throw an ERROR if 'optional=TRUE', but 
        #   this is not happending on the version of R used by the quality engine. Because of this
        #   we have to do this extra error checking.
        metadataDate <- tryCatch({
          md <- NA
          md <- as.Date(pubDate, optional = TRUE)
          return (md)
        }, warning = function(w) {
          return(md)
        }, error = function(e) {
          return(md)
        })
        
        # If the date wasn't parsable then try parsing again with specific formats
        if(is.na(metadataDate)) {
          metadataDate <- tryCatch({
            md <- NA
            md <- as.Date(pubDate, tryFormats = c("%d/%m/%Y","%Y-%m-%d","%d-%m-%Y", "%Y%m%d","%B %d %Y","%Y"), optional = TRUE)
            return (md)
          }, warning = function(w) {
            return(md)
          }, error = function(e) {
            return(md)
          })
        }
      
        if(! is.na(metadataDate)) {
          currentDate <- Sys.Date()
          if(metadataDate > currentDate) {
            failure(sprintf("The publication date '%s' is in the future.", datasetPubDate))
          } else {
            success(sprintf("The publication date '%s' was found and is not in the future.", datasetPubDate))
          }
        } else {
          failure(sprintf("Unable to parse publication date '%s'.", datasetPubDate))
        }
      }
    } else {
      failure("A publication date is not present.") 
    }
   ]]></code>
   <selector>
     <name>pubDatePresent</name>
     <xpath>boolean(
            /resource/publicationYear or
            /eml/dataset/pubDate or
            /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date or
            /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime or
            /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[dateType/CI_DateTypeCode='publication']/date/DateTime)
     </xpath>
   </selector>
   <selector>
       <name>datasetPubDate</name>
       <xpath>/resource/publicationYear |
              /eml/dataset/pubDate |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/Date//text()[normalize-space()] |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[normalize-space(dateType/CI_DateTypeCode)='publication']/date/DateTime//text()[normalize-space()] |
              /*/identificationInfo/*/citation/CI_Citation/date/CI_Date[dateType/CI_DateTypeCode='publication']/date/DateTime//text()[normalize-space()]
       </xpath>
   </selector>
   <dialect>
      <name>DataCite 4</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>
